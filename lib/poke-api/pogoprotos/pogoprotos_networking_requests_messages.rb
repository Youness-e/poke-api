# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: POGOProtos.Networking.Requests.Messages.proto

require 'google/protobuf'

require_relative 'pogoprotos_enums'
require_relative 'pogoprotos_inventory_item'
require_relative 'pogoprotos_data_player'
require_relative 'pogoprotos_data_battle'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "POGOProtos.Networking.Requests.Messages.UpgradePokemonMessage" do
    optional :pokemon_id, :fixed64, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage" do
    optional :platform, :enum, 1, "POGOProtos.Enums.Platform"
    optional :device_manufacturer, :string, 2
    optional :device_model, :string, 3
    optional :locale, :string, 4
    optional :app_version, :uint32, 5
  end
  add_message "POGOProtos.Networking.Requests.Messages.IncenseEncounterMessage" do
    optional :encounter_id, :uint64, 1
    optional :encounter_location, :string, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.StartGymBattleMessage" do
    optional :gym_id, :string, 1
    repeated :attacking_pokemon_ids, :fixed64, 2
    optional :defending_pokemon_id, :fixed64, 3
    optional :player_latitude, :double, 4
    optional :player_longitude, :double, 5
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseIncenseMessage" do
    optional :incense_type, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
  end
  add_message "POGOProtos.Networking.Requests.Messages.CollectDailyDefenderBonusMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetInventoryMessage" do
    optional :last_timestamp_ms, :int64, 1
    optional :item_been_seen, :int32, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.SetContactSettingsMessage" do
    optional :contact_settings, :message, 1, "POGOProtos.Data.Player.ContactSettings"
  end
  add_message "POGOProtos.Networking.Requests.Messages.PlayerUpdateMessage" do
    optional :latitude, :double, 1
    optional :longitude, :double, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.FortDetailsMessage" do
    optional :fort_id, :string, 1
    optional :latitude, :double, 2
    optional :longitude, :double, 3
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetHatchedEggsMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.EvolvePokemonMessage" do
    optional :pokemon_id, :fixed64, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage" do
    optional :item_id, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
    optional :count, :int32, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.AttackGymMessage" do
    optional :gym_id, :string, 1
    optional :battle_id, :string, 2
    repeated :attack_actions, :message, 3, "POGOProtos.Data.Battle.BattleAction"
    optional :last_retrieved_actions, :message, 4, "POGOProtos.Data.Battle.BattleAction"
    optional :player_latitude, :double, 5
    optional :player_longitude, :double, 6
  end
  add_message "POGOProtos.Networking.Requests.Messages.ReleasePokemonMessage" do
    optional :pokemon_id, :fixed64, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.SetAvatarMessage" do
    optional :player_avatar, :message, 2, "POGOProtos.Data.Player.PlayerAvatar"
  end
  add_message "POGOProtos.Networking.Requests.Messages.DownloadItemTemplatesMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetMapObjectsMessage" do
    repeated :cell_id, :uint64, 1
    repeated :since_timestamp_ms, :int64, 2
    optional :latitude, :double, 3
    optional :longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.FortRecallPokemonMessage" do
    optional :fort_id, :string, 1
    optional :pokemon_id, :fixed64, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetGymDetailsMessage" do
    optional :gym_id, :string, 1
    optional :player_latitude, :double, 2
    optional :player_longitude, :double, 3
    optional :gym_latitude, :double, 4
    optional :gym_longitude, :double, 5
    optional :client_version, :string, 6
  end
  add_message "POGOProtos.Networking.Requests.Messages.SfidaActionLogMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.EchoMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage" do
    optional :pokemon_id, :fixed64, 1
    optional :nickname, :string, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.CatchPokemonMessage" do
    optional :encounter_id, :fixed64, 1
    optional :pokeball, :enum, 2, "POGOProtos.Inventory.Item.ItemId"
    optional :normalized_reticle_size, :double, 3
    optional :spawn_point_id, :string, 4
    optional :hit_pokemon, :bool, 5
    optional :spin_modifier, :double, 6
    optional :normalized_hit_position, :double, 7
  end
  add_message "POGOProtos.Networking.Requests.Messages.FortSearchMessage" do
    optional :fort_id, :string, 1
    optional :player_latitude, :double, 2
    optional :player_longitude, :double, 3
    optional :fort_latitude, :double, 4
    optional :fort_longitude, :double, 5
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseItemPotionMessage" do
    optional :item_id, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
    optional :pokemon_id, :fixed64, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.FortDeployPokemonMessage" do
    optional :fort_id, :string, 1
    optional :pokemon_id, :fixed64, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.EncounterMessage" do
    optional :encounter_id, :fixed64, 1
    optional :spawn_point_id, :string, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetPlayerProfileMessage" do
    optional :player_name, :string, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetSuggestedCodenamesMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessage" do
    optional :team, :enum, 1, "POGOProtos.Enums.TeamColor"
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseItemReviveMessage" do
    optional :item_id, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
    optional :pokemon_id, :fixed64, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.EquipBadgeMessage" do
    optional :badge_type, :enum, 1, "POGOProtos.Enums.BadgeType"
  end
  add_message "POGOProtos.Networking.Requests.Messages.SetFavoritePokemonMessage" do
    optional :pokemon_id, :int64, 1
    optional :is_favorite, :bool, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.CheckCodenameAvailableMessage" do
    optional :codename, :string, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.ClaimCodenameMessage" do
    optional :codename, :string, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.EncounterTutorialCompleteMessage" do
    optional :pokemon_id, :enum, 1, "POGOProtos.Enums.PokemonId"
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseItemXpBoostMessage" do
    optional :item_id, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseItemEggIncubatorMessage" do
    optional :item_id, :string, 1
    optional :pokemon_id, :uint64, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetDownloadUrlsMessage" do
    repeated :asset_id, :string, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.DiskEncounterMessage" do
    optional :encounter_id, :uint64, 1
    optional :fort_id, :string, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.CheckAwardedBadgesMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseItemGymMessage" do
    optional :item_id, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
    optional :gym_id, :string, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetIncensePokemonMessage" do
    optional :player_latitude, :double, 1
    optional :player_longitude, :double, 2
  end
  add_message "POGOProtos.Networking.Requests.Messages.UseItemCaptureMessage" do
    optional :item_id, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
    optional :encounter_id, :fixed64, 2
    optional :spawn_point_id, :string, 3
  end
  add_message "POGOProtos.Networking.Requests.Messages.CollectDailyBonusMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.DownloadSettingsMessage" do
    optional :hash, :string, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.GetPlayerMessage" do
  end
  add_message "POGOProtos.Networking.Requests.Messages.AddFortModifierMessage" do
    optional :modifier_type, :enum, 1, "POGOProtos.Inventory.Item.ItemId"
    optional :fort_id, :string, 2
    optional :player_latitude, :double, 3
    optional :player_longitude, :double, 4
  end
  add_message "POGOProtos.Networking.Requests.Messages.LevelUpRewardsMessage" do
    optional :level, :int32, 1
  end
  add_message "POGOProtos.Networking.Requests.Messages.DownloadRemoteConfigVersionMessage" do
    optional :platform, :enum, 1, "POGOProtos.Enums.Platform"
    optional :device_manufacturer, :string, 2
    optional :device_model, :string, 3
    optional :locale, :string, 4
    optional :app_version, :uint32, 5
  end
  add_message "POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage" do
    repeated :tutorials_completed, :enum, 1, "POGOProtos.Enums.TutorialState"
    optional :send_marketing_emails, :bool, 2
    optional :send_push_notifications, :bool, 3
  end
end

module POGOProtos
  module Networking
    module Requests
      module Messages
        UpgradePokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UpgradePokemonMessage").msgclass
        GetAssetDigestMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage").msgclass
        IncenseEncounterMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.IncenseEncounterMessage").msgclass
        StartGymBattleMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.StartGymBattleMessage").msgclass
        UseIncenseMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseIncenseMessage").msgclass
        CollectDailyDefenderBonusMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.CollectDailyDefenderBonusMessage").msgclass
        GetInventoryMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetInventoryMessage").msgclass
        SetContactSettingsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.SetContactSettingsMessage").msgclass
        PlayerUpdateMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.PlayerUpdateMessage").msgclass
        FortDetailsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.FortDetailsMessage").msgclass
        GetHatchedEggsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetHatchedEggsMessage").msgclass
        EvolvePokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.EvolvePokemonMessage").msgclass
        RecycleInventoryItemMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage").msgclass
        AttackGymMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.AttackGymMessage").msgclass
        ReleasePokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.ReleasePokemonMessage").msgclass
        SetAvatarMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.SetAvatarMessage").msgclass
        DownloadItemTemplatesMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.DownloadItemTemplatesMessage").msgclass
        GetMapObjectsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetMapObjectsMessage").msgclass
        FortRecallPokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.FortRecallPokemonMessage").msgclass
        GetGymDetailsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetGymDetailsMessage").msgclass
        SfidaActionLogMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.SfidaActionLogMessage").msgclass
        EchoMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.EchoMessage").msgclass
        NicknamePokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage").msgclass
        CatchPokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.CatchPokemonMessage").msgclass
        FortSearchMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.FortSearchMessage").msgclass
        UseItemPotionMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseItemPotionMessage").msgclass
        FortDeployPokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.FortDeployPokemonMessage").msgclass
        EncounterMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.EncounterMessage").msgclass
        GetPlayerProfileMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetPlayerProfileMessage").msgclass
        GetSuggestedCodenamesMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetSuggestedCodenamesMessage").msgclass
        SetPlayerTeamMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessage").msgclass
        UseItemReviveMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseItemReviveMessage").msgclass
        EquipBadgeMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.EquipBadgeMessage").msgclass
        SetFavoritePokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.SetFavoritePokemonMessage").msgclass
        CheckCodenameAvailableMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.CheckCodenameAvailableMessage").msgclass
        ClaimCodenameMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.ClaimCodenameMessage").msgclass
        EncounterTutorialCompleteMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.EncounterTutorialCompleteMessage").msgclass
        UseItemXpBoostMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseItemXpBoostMessage").msgclass
        UseItemEggIncubatorMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseItemEggIncubatorMessage").msgclass
        GetDownloadUrlsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetDownloadUrlsMessage").msgclass
        DiskEncounterMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.DiskEncounterMessage").msgclass
        CheckAwardedBadgesMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.CheckAwardedBadgesMessage").msgclass
        UseItemGymMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseItemGymMessage").msgclass
        GetIncensePokemonMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetIncensePokemonMessage").msgclass
        UseItemCaptureMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.UseItemCaptureMessage").msgclass
        CollectDailyBonusMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.CollectDailyBonusMessage").msgclass
        DownloadSettingsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.DownloadSettingsMessage").msgclass
        GetPlayerMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.GetPlayerMessage").msgclass
        AddFortModifierMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.AddFortModifierMessage").msgclass
        LevelUpRewardsMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.LevelUpRewardsMessage").msgclass
        DownloadRemoteConfigVersionMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.DownloadRemoteConfigVersionMessage").msgclass
        MarkTutorialCompleteMessage = Google::Protobuf::DescriptorPool.generated_pool.lookup("POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage").msgclass
      end
    end
  end
end
